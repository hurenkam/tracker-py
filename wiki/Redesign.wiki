= Redesign: Tracker v0.20x =

http://tracker-py.googlecode.com/svn/trunk/v0.20/screenshots/Screenshot0001.jpg
http://tracker-py.googlecode.com/svn/trunk/v0.20/screenshots/Screenshot0002.jpg
http://tracker-py.googlecode.com/svn/trunk/v0.20/screenshots/Screenshot0004.jpg

== Working features ==
  * Dashview with gauges (speed, distance, altitude, heading, signal, time)
  * Mapview showing current position on map (press select to autoselect map)
  * Waypoint proximity alarm
  * Persistent storage of several settings
  * Integrated with landmarks database (anything in category 'Waypoints' shows up in tracker
  * Track recording
  * Track display
  * Im/export of tracks & waypoints in GPX format

== Features Todo ==
  * Import map
  * Calibrate map
  * Scroll/Zoom map
  * Show waypoints on map
  * Show heading mapview
  * Show signal in mapview
  * Gauge options in dashview

== Other Todo ==
  * Merge most of wxviews & s60views code
  * Create single sis package

== Dependencies ==
  * PyS60 1.4.x (mandatory)
  * Landmarks module (recommended)
  * Envy module (recommended)
  * Misty module (recommended)

The modules need to be signed at symbian signed, with at least the
Location capability, but possibly others as well.

== Code architecture ==
The code is now split into several files, I know, having all in one
place makes it easy to run, but from coding perspective it's a real
nightmare. So, now functionality has been grouped into different
modules.

Because I'm mainly developping on OSX and Linux, the redesign is also
aimed at having the application run on multiple platforms.

==== osal module ====

This is an Operating System Abstraction Layer.
Every derived class has its own implementation
of generic methods that are used elsewhere in the
code. Any os function that differs accross the
supported platforms should be implemented here.

==== datatypes module ====

This module contains 'simple' classes, that is:
  * AlarmResponder
  * Alarm
  * ProximitiyAlarm
  * DistanceAlarm
  * TimeAlarm
  * PositionAlarm
  * Point
  * Course
  * Signal
  * Waypoint
  * Refpoint
  * Map
  * Track
  * Route
  * FileSelector

==== dataprovider module ====

This module is the real-time data provider for the
application. It provides the application with time
and position information. It is basically an abstraction
layer on top of the GPS api.

For specific platforms, derived classes have been
created to be instantiated by the main program.

The following classes exist:
  * DataProvider (generic interface)
  * S60DataProvider (uses pyS60 positioning api)
  * SimDataProvider (simulates a GPS)

==== datastorage module ====

This module handles persistant storage of
waypoints, tracks, maps and config data.

For specific platforms, derived classes
have been created that are to be instantiated
by the main program.

It has the following classes:
  * DataStorage
  * S60DataStorage
  * PosixDataStorage
  * NTDataStorage

==== views modules ====

The following view modules still need to be consolidated.
Much of the S60views and wxviews code overlap, and should
be merged. These modules contain the controller/view part
of the system.

  * views
  * s60views
  * wxviews
  * consoleviews
